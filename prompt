
#-------------------------------------------------------
# PROMPT
#-------------------------------------------------------
# Colors for prompts

COLOR_RESET='\[\e[0m\]'
COLOR_BRIGHT='\[\e[1m\]'
COLOR_DIM='\[\e[2m\]'
COLOR_UNDERSCORE='\[\e[3m\]'
COLOR_BLINK='\[\e[5m\]'
COLOR_REVERSE='\[\e[7m\]'
COLOR_HIDDEN='\[\e[8m\]'

COLOR_FG_BLACK='\[\e[30m\]'
COLOR_FG_RED='\[\e[31m\]'
COLOR_FG_GREEN='\[\e[32m\]'
COLOR_FG_YELLOW='\[\e[33m\]'
COLOR_FG_BLUE='\[\e[34m\]'
COLOR_FG_MAGENTA='\[\e[35m\]'
COLOR_FG_CYAN='\[\e[36m\]'
COLOR_FG_WHITE='\[\e[37m\]'

COLOR_BG_BLACK='\[\e[40m\]'
COLOR_BG_RED='\[\e[41m\]'
COLOR_BG_GREEN='\[\e[42m\]'
COLOR_BG_YELLOW='\[\e[44m\]'
COLOR_BG_BLUE='\[\e[44m\]'
COLOR_BG_MAGENTA='\[\e[45m\]'
COLOR_BG_CYAN='\[\e[46m\]'
COLOR_BG_WHITE='\[\e[47m\]'

# Source: http://stackoverflow.com/questions/9334473/basic-bash-script-for-terminal-prompt
# Prompting: Returns whether there is data to be commited in this
# directory's git repository
function parse_git_dirty {
   [[ $(git status 2> /dev/null | tail -n1) != "nothing to commit (working directory clean)" ]] && echo "*"
}

# Source: http://stackoverflow.com/questions/9334473/basic-bash-script-for-terminal-prompt
# Prompting: Returns the branch for the current directory's git repo
# or blank if there is no repo
function parse_git_branch {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/[\1$(parse_git_dirty)]/"
}

# Various types of prompt for different activities
function prompt {
  case $1 in 
    coding) 
      export PS1="${COLOR_BRIGHT}${COLOR_FG_RED}âžœ${COLOR_RESET} ${COLOR_BRIGHT}${COLOR_FG_RED}"'$(parse_git_branch)'"${COLOR_RESET}${COLOR_DIM}${COLOR_FG_YELLOW}\u${COLOR_RESET}@${COLOR_FG_YELLOW}\h${COLOR_RESET} [${COLOR_DIM}${COLOR_FG_CYAN}\W${COLOR_RESET}] ${COLOR_BRIGHT}${COLOR_FG_RED}\\\$ ${COLOR_RESET}";;
    normal) 
      export PS1="${COLOR_DIM}${COLOR_FG_YELLOW}\u${COLOR_RESET}@${COLOR_FG_YELLOW}\h${COLOR_RESET} [${COLOR_DIM}${COLOR_FG_CYAN}\W${COLOR_RESET}] \\\$ ";;
    full) 
      export PS1="${COLOR_BRIGHT}${COLOR_FG_RED}"'$(parse_git_branch)'"${COLOR_RESET}${COLOR_DIM}${COLOR_FG_YELLOW}\u${COLOR_RESET}@${COLOR_FG_YELLOW}\h${COLOR_RESET} [${COLOR_DIM}${COLOR_FG_CYAN}\w${COLOR_RESET}] \#\\\$ ";;
    *)
      export PS1='\u@\h \[\033[1;33m\]\w\[\033[0m\]$(parse_git_branch) \$ '
  esac
}

# Use a prompt for git coding on local and remote systems by default
prompt coding
